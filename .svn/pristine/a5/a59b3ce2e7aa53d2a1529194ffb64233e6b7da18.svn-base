package parser;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;

import Logging.DefaultTomcatLogger;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 * Created by Wouter
 */
public class MediaSearch extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        this.doPost(req, resp);
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        DefaultTomcatLogger logger = new DefaultTomcatLogger();

        String mediaSearchTerm = req.getParameter("searchterm");
        String searchType = req.getParameter("searchtype");

        resp.setContentType("text/xml;charset=utf-8");
        PrintWriter out = resp.getWriter();

        org.w3c.dom.Document searchResult = doSearch(mediaSearchTerm, searchType);

        TransformerFactory transformerFactory = TransformerFactory.newInstance();
        Transformer transformer = null;
        try {
            transformer = transformerFactory.newTransformer();
            DOMSource source = new DOMSource(searchResult);

            transformer.transform(source, new StreamResult(out));
        } catch (TransformerConfigurationException e) {
            e.printStackTrace();
        } catch (TransformerException e) {
            e.printStackTrace();
        }

    }

    protected org.w3c.dom.Document doSearch(String mediaSearchTerm, String searchType) {

        DefaultTomcatLogger logger = new DefaultTomcatLogger();
        PirateParser parser = new PirateParser();

        return new PirateParser().parseTorrent(mediaSearchTerm, getMinumumSeedersFromSettings(), searchType);
    }

    private int getMinumumSeedersFromSettings() {

        int minSeeders = 0;

        try {
            File settingsXml = new File("webapps/config/settings.xml");
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            org.w3c.dom.Document doc = dBuilder.parse(settingsXml);

            doc.getDocumentElement().normalize();

            minSeeders = Integer.parseInt(doc.getElementsByTagName("minseeders").item(0).getTextContent());

        } catch (ParserConfigurationException e) {
            e.printStackTrace();
        } catch (SAXException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        return minSeeders;
    }
}
